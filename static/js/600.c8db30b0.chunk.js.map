{
    "version": 3,
    "file": "static/js/600.c8db30b0.chunk.js",
    "mappings": "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",
    "sources": [
        "components/pages/Work/WorkDataList.js",
        "components/pages/Work/WorkItem.js",
        "components/pages/Work/WorkOpen.js",
        "components/pages/Work/index.js",
        "components/pages/Work/Work.js"
    ],
    "sourcesContent": [
        "import MovieTrailersImg from \"../../../images/MovieTrailers.png\";\r\nimport BoardGamesImg from \"../../../images/BoardGames.png\";\r\nimport MernPosImg from \"../../../images/MernPos.png\";\r\nimport ChatBotImg from \"../../../images/ChatBot.png\";\r\nimport MyWayImg from \"../../../images/MyWay.png\";\r\nimport SendMyCellImg from \"../../../images/SendMyCell.png\";\r\nimport SignatureVerifierImg from \"../../../images/SignatureVerifier.png\";\r\nimport RaceItImg from \"../../../images/RaceIt.png\";\r\nimport MeditationImg from \"../../../images/Meditation.png\";\r\nimport SnakeLadderImg from \"../../../images/SnakeLadder.png\";\r\nimport MobileMailImg from \"../../../images/MobileMailImg.png\";\r\nimport PortFolioImg from \"../../../images/PortFolioImg.png\";\r\nimport SeaAdventuresImg from \"../../../images/SeaAdventures.png\";\r\n\r\nexport const WorkDataList = {\r\n    MovieTrailers: {\r\n        id: \"MovieTrailers\",\r\n        image: MovieTrailersImg,\r\n        title: \"Movie Trailers\",\r\n        time: \"Oct 2021\",\r\n        techstack: [\"React-hooks\", \"Redux\", \"JavaScript\", \"HTML-CSS\", \"Lazy-Loading\"],\r\n        description: [\r\n            \"A Movie trailers application to watch trailers of different movies, each having genres, languages etc.\",\r\n            \"Responsive enough to be viewed on any device. (desktop to mobile)\",\r\n        ],\r\n        codeUrl: \"https://github.com/TeeeJaey/Movie-Trailers-React\",\r\n        liveUrl: \"https://teeejaey.github.io/Movie-Trailers-React/\",\r\n    },\r\n    BoardGames: {\r\n        id: \"BoardGames\",\r\n        image: BoardGamesImg,\r\n        title: \"Board Games\",\r\n        time: \"Aug 2020 - Ongoing\",\r\n        techstack: [\"JavaScript\", \"Vue-JS\", \"HTML-CSS\"],\r\n        description: [\r\n            \"Set of Board games made in HTML / JavaScript\",\r\n            \"Include games like Business, Wordle, Ludo, Tetris, 2048, etc.\",\r\n        ],\r\n        codeUrl: \"https://github.com/TeeeJaey/BoardGames\",\r\n        liveUrl: \"https://teeejaey.github.io/BoardGames\",\r\n    },\r\n    MernPos: {\r\n        id: \"MernPos\",\r\n        image: MernPosImg,\r\n        title: \"MernPos\",\r\n        time: \"Jan 2021 - Mar 2021\",\r\n        techstack: [\"NodeJS\", \"MongoDB\", \"ExpressJS\", \"React\", \"JavaScript\", \"HTML-CSS\"],\r\n        description: [\r\n            \"A Mern Stack Point of SALE application\",\r\n            \"Enables user to signin to the app, add commodities, perform payment and complete transaction\",\r\n            \"Also creates a pdf receipt in the end of each transaction\",\r\n        ],\r\n        codeUrl: \"https://github.com/TeeeJaey/MernPos\",\r\n    },\r\n    ChatBot: {\r\n        id: \"ChatBot\",\r\n        image: ChatBotImg,\r\n        title: \"ChatBot\",\r\n        time: \"Dec 2021\",\r\n        techstack: [\"React\", \"TypeScript\", \"HTML-CSS\"],\r\n        description: [\r\n            \"A simple non-AI chatting assistant written in React\",\r\n            \"Ask questions like - 'who r u?, 'who made u?', 'who is batman?' ,'i am hungry'\",\r\n            \"Best viewed on a phone\",\r\n        ],\r\n        codeUrl: \"https://github.com/TeeeJaey/ChatBot\",\r\n        liveUrl: \"https://teeejaey.github.io/ChatBot\",\r\n    },\r\n    SeaAdventures: {\r\n        id: \"SeaAdventures\",\r\n        image: SeaAdventuresImg,\r\n        title: \"SeaAdventures\",\r\n        time: \"Aug 2023\",\r\n        techstack: [\"HTML\", \"CSS\", \"Javascript\"],\r\n        description: [\r\n            \"A simple CSS Animation based game\",\r\n            \"More stages will soon be added\",\r\n            \"Best viewed on a laptop/desktop\",\r\n        ],\r\n        codeUrl: \"https://github.com/TeeeJaey/SeaAdventures\",\r\n        liveUrl: \"https://teeejaey.github.io/SeaAdventures\",\r\n    },\r\n    Meditation: {\r\n        id: \"Meditation\",\r\n        image: MeditationImg,\r\n        title: \"Meditation App\",\r\n        time: \"Sep 2021\",\r\n        techstack: [\"React-hooks\", \"Firebase-FireStore DB\", \"HTML-CSS\"],\r\n        description: [\r\n            \"A Meditation App where two users (trainer and seeker) can simultaneously undergo a meditation period\",\r\n            \"There is no meditation in reality\",\r\n            \"Seeker will request and trainer will accept and then the timer starts\",\r\n        ],\r\n        codeUrl: \"https://github.com/TeeeJaey/Meditation-App\",\r\n    },\r\n    SendMyCell: {\r\n        id: \"SendMyCell\",\r\n        image: SendMyCellImg,\r\n        title: \"Send My Cell\",\r\n        time: \"Jan 2019 - Feb 2019\",\r\n        techstack: [\"PHP\", \"HTML-CSS\", \"JavaScript\", \"MySQL\"],\r\n        description: [\r\n            \"SendMyCell is a project on E-Commerce Website & database designing.\",\r\n            \"It is an online store for mobiles\",\r\n            \"There is a dashboard page, registration page, product page and also cart page\",\r\n        ],\r\n        codeUrl: \"https://github.com/TeeeJaey/SendMyCell\",\r\n    },\r\n    SignatureVerifier: {\r\n        id: \"SignatureVerifierImg\",\r\n        image: SignatureVerifierImg,\r\n        title: \"Signature Verifier\",\r\n        time: \"Jan 2019 - May 2019\",\r\n        techstack: [\"Python\", \"OpenCV\", \"MySQL\"],\r\n        description: [\r\n            \"Handwritten Signature Verification & writer Identification using Image Processing\",\r\n            \"It uses LBP to extract features and train the system\",\r\n            \"It uses KNN to classify the test images\",\r\n        ],\r\n        codeUrl: \"https://github.com/TeeeJaey/SignatureVerifier\",\r\n    },\r\n    RaceIt: {\r\n        id: \"RaceIt\",\r\n        image: RaceItImg,\r\n        title: \"Race It\",\r\n        time: \"Jan 2017 - April 2017\",\r\n        techstack: [\"Unity 3D\", \"C#\"],\r\n        description: [\r\n            \"A car racing game designed on Unity 3D engine\",\r\n            \"Allows player to race with his/her car against few other cars\",\r\n        ],\r\n        codeUrl: \"https://github.com/TeeeJaey/RaceIt-1.0\",\r\n    },\r\n    PortFolio: {\r\n        id: \"PortFolio\",\r\n        image: PortFolioImg,\r\n        title: \"Portfolio\",\r\n        time: \"Feb 2018\",\r\n        techstack: [\"React\", \"Javascript\", \"HTML-CSS\"],\r\n        description: [\"My portfolio App written in React\", \"Can be viewed in desktop or mobiles\"],\r\n        codeUrl: \"https://github.com/TeeeJaey/PortFolio\",\r\n        liveUrl: \"https://teeejaey.github.io\",\r\n    },\r\n    SnakeLadder: {\r\n        id: \"SnakeLadder\",\r\n        image: SnakeLadderImg,\r\n        title: \"Snake & Ladder\",\r\n        time: \"Oct 2018\",\r\n        techstack: [\"Android\", \"Java\"],\r\n        description: [\r\n            \"Android app developed on Android studio\",\r\n            \"Snakes and Ladders, a very famous board game form the 70s\",\r\n        ],\r\n        codeUrl: \"https://github.com/TeeeJaey/Snakes-Ladder\",\r\n    },\r\n    MyWay: {\r\n        id: \"MyWay\",\r\n        image: MyWayImg,\r\n        title: \"MyWay\",\r\n        time: \"Feb 2018\",\r\n        techstack: [\"HTML-CSS\", \"JavaScript\"],\r\n        description: [\"Tried to copy a bootstrap tempelate that I found online.\"],\r\n        codeUrl: \"https://github.com/TeeeJaey/MYWAY\",\r\n        liveUrl: \"https://teeejaey.github.io/Projects/MyWay/MYWAY.html\",\r\n    },\r\n    MobileMail: {\r\n        id: \"MobileMail\",\r\n        image: MobileMailImg,\r\n        title: \"Mobile Mail\",\r\n        time: \"Feb 2018\",\r\n        techstack: [\"HTML-CSS\"],\r\n        description: [\"A mobile mail page UI\"],\r\n        codeUrl: \"https://gist.github.com/TeeeJaey/7c448bc5f0c990d9144a59f6b37b452f\",\r\n        liveUrl: \"https://teeejaey.github.io/Projects/mobile.html\",\r\n    },\r\n};\r\n",
        "import React from \"react\";\r\nimport \"./WorkItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function WorkItem({ image, name, workItemClicked }) {\r\n    return (\r\n        <li>\r\n            <Link to={name}>\r\n                <div className=\"work-item\" onClick={() => workItemClicked(name)}>\r\n                    <img src={image} alt={name}></img>\r\n                    <div className=\"work-item-overlay\"></div>\r\n                </div>\r\n            </Link>\r\n        </li>\r\n    );\r\n}\r\n",
        "import React from \"react\";\r\nimport { MdClose, MdSmartDisplay } from \"react-icons/md\";\r\nimport { RiCodeBoxFill } from \"react-icons/ri\";\r\nimport \"./WorkOpen.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function WorkOpen({ work, onClose }) {\r\n    return (\r\n        <div className=\"work-open\">\r\n            <div className=\"work-open-container\">\r\n                <Link to=\"/Work\">\r\n                    <MdClose className=\"word-open-close-btn\" onClick={() => onClose()} />\r\n                </Link>\r\n                <img src={work.image} alt={work.id}></img>\r\n\r\n                <div className=\"work-open-right\">\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"title\">{work.title}</div>\r\n                        <div className=\"timespan\">{work.time}</div>\r\n                    </div>\r\n                    <div className=\"techstack\">\r\n                        {work.techstack.map((tech, index) => (\r\n                            <span key={index} className=\"techstack-item\">\r\n                                {tech}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"work-btns\">\r\n                        {work.liveUrl && (\r\n                            <div className=\"work-btn\" onClick={() => window.open(work.liveUrl)}>\r\n                                Run Live <MdSmartDisplay className=\"work-btn-icon\" />\r\n                            </div>\r\n                        )}\r\n                        {work.codeUrl && (\r\n                            <div className=\"work-btn\" onClick={() => window.open(work.codeUrl)}>\r\n                                View Code <RiCodeBoxFill className=\"work-btn-icon\" />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"work-open-bottom\">\r\n                    <h4>Description</h4>\r\n                    <ul className=\"work-open-desc\">\r\n                        {work.description.map((desc, index) => (\r\n                            <li key={index}>{desc}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n",
        "import { Work } from \"./Work\";\r\n\r\nexport default Work;\r\n",
        "import React, { useState, useEffect } from \"react\";\r\nimport \"./Work.css\";\r\nimport { WorkDataList } from \"./WorkDataList\";\r\nimport WorkItem from \"./WorkItem\";\r\nimport WorkOpen from \"./WorkOpen\";\r\nimport { Routes, Route, useLocation } from \"react-router-dom\";\r\nimport { useVisible, menuBarIndex } from \"../../../helpers\";\r\n\r\nexport function Work({ match, selectedTab, setSelectedTab }) {\r\n    const location = useLocation();\r\n    const [showData, setShowData] = useState(null);\r\n    const page = useVisible(selectedTab, menuBarIndex.Work);\r\n\r\n    useEffect(() => {\r\n        if (selectedTab === menuBarIndex.Work) {\r\n            const workItem = location.pathname.split(\"/\")[2];\r\n            if (workItem) setTimeout(() => setShowData(workItem), 1000);\r\n        }\r\n    }, [selectedTab]);\r\n\r\n    return (\r\n        <>\r\n            <Routes>\r\n                <Route\r\n                    path={showData}\r\n                    element={<WorkOpen onClose={() => setShowData(null)} work={WorkDataList[showData]} />}\r\n                />\r\n            </Routes>\r\n            <div id={page} className=\"main-view off\">\r\n                <div className=\"header\">Work</div>\r\n                <div className=\"text\">\r\n                    I have made some really cool <span className=\"highlight\">personal projects</span>\r\n                    <br />\r\n                    Checkout my\r\n                    <span\r\n                        className=\"link\"\r\n                        onClick={() => {\r\n                            setSelectedTab(6);\r\n                        }}\r\n                    >\r\n                        {\" github page \"}\r\n                    </span>\r\n                    for more\r\n                </div>\r\n\r\n                <div className=\"work-list\">\r\n                    <ul>\r\n                        {Object.keys(WorkDataList).map((key, index) => (\r\n                            <WorkItem\r\n                                key={index}\r\n                                workItemClicked={name => setShowData(name)}\r\n                                image={WorkDataList[key].image}\r\n                                name={key}\r\n                            />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"
    ],
    "names": [
        "WorkDataList",
        "MovieTrailers",
        "id",
        "image",
        "MovieTrailersImg",
        "title",
        "time",
        "techstack",
        "description",
        "codeUrl",
        "liveUrl",
        "BoardGames",
        "BoardGamesImg",
        "MernPos",
        "MernPosImg",
        "ChatBot",
        "ChatBotImg",
        "SeaAdventures",
        "Meditation",
        "MeditationImg",
        "SendMyCell",
        "SendMyCellImg",
        "SignatureVerifier",
        "SignatureVerifierImg",
        "RaceIt",
        "RaceItImg",
        "PortFolio",
        "PortFolioImg",
        "SnakeLadder",
        "SnakeLadderImg",
        "MyWay",
        "MyWayImg",
        "MobileMail",
        "MobileMailImg",
        "WorkItem",
        "_ref",
        "name",
        "workItemClicked",
        "_jsx",
        "children",
        "Link",
        "to",
        "_jsxs",
        "className",
        "onClick",
        "src",
        "alt",
        "WorkOpen",
        "work",
        "onClose",
        "MdClose",
        "map",
        "tech",
        "index",
        "window",
        "open",
        "MdSmartDisplay",
        "RiCodeBoxFill",
        "desc",
        "match",
        "selectedTab",
        "setSelectedTab",
        "location",
        "useLocation",
        "showData",
        "setShowData",
        "useState",
        "page",
        "useVisible",
        "menuBarIndex",
        "Work",
        "useEffect",
        "workItem",
        "pathname",
        "split",
        "setTimeout",
        "_Fragment",
        "Routes",
        "Route",
        "path",
        "element",
        "Object",
        "keys",
        "key"
    ],
    "sourceRoot": ""
}
